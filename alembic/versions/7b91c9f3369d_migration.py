"""Migration

Revision ID: 7b91c9f3369d
Revises: 5cb88016bb21
Create Date: 2024-02-12 02:16:46.056049

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "7b91c9f3369d"
down_revision: Union[str, None] = "5cb88016bb21"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("password_hash", sa.String(length=100), nullable=False)
    )
    op.add_column("users", sa.Column("email", sa.String(length=100), nullable=False))
    op.alter_column(
        "users",
        "name",
        existing_type=mysql.VARCHAR(length=50),
        type_=sa.String(length=30),
        nullable=False,
    )
    op.create_unique_constraint(None, "users", ["email"])
    op.create_unique_constraint(None, "users", ["name"])
    op.drop_column("users", "age")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("age", mysql.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.alter_column(
        "users",
        "name",
        existing_type=sa.String(length=30),
        type_=mysql.VARCHAR(length=50),
        nullable=True,
    )
    op.drop_column("users", "email")
    op.drop_column("users", "password_hash")
    # ### end Alembic commands ###
